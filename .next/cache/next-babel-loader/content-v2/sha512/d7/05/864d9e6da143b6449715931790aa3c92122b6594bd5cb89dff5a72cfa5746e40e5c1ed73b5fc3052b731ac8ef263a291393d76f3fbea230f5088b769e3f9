{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\tienda\\\\nextjs-shopify-master\\\\pages\\\\[[...path]].tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NextSeo } from 'next-seo';\nimport { useRouter } from 'next/router';\nimport { Layout } from '@components/common';\nimport { BuilderComponent, Builder, builder } from '@builder.io/react';\nimport builderConfig from '@config/builder';\nimport DefaultErrorPage from 'next/error';\nimport Head from 'next/head';\nimport { resolveBuilderContent } from '@lib/resolve-builder-content';\nbuilder.init(builderConfig.apiKey);\nimport '../blocks/ProductGrid/ProductGrid.builder';\nimport '../blocks/CollectionView/CollectionView.builder';\nimport { useThemeUI } from '@theme-ui/core';\nimport { Link } from '@components/ui';\nimport { Themed } from '@theme-ui/mdx';\nimport { getLayoutProps } from '@lib/get-layout-props';\nconst isProduction = false;\nexport async function getStaticProps({\n  params,\n  locale\n}) {\n  var _params$path;\n\n  const page = await resolveBuilderContent('page', {\n    locale,\n    urlPath: '/' + ((params === null || params === void 0 ? void 0 : (_params$path = params.path) === null || _params$path === void 0 ? void 0 : _params$path.join('/')) || '')\n  });\n  return {\n    props: _objectSpread({\n      page,\n      locale\n    }, await getLayoutProps()),\n    // Next.js will attempt to re-generate the page:\n    // - When a request comes in\n    // - At most once every 30 seconds\n    revalidate: 30\n  };\n}\nexport async function getStaticPaths({\n  locales\n}) {\n  const pages = await builder.getAll('page', {\n    options: {\n      noTargeting: true\n    },\n    apiKey: builderConfig.apiKey\n  });\n  return {\n    paths: pages.map(page => {\n      var _page$data;\n\n      return `${(_page$data = page.data) === null || _page$data === void 0 ? void 0 : _page$data.url}`;\n    }),\n    fallback: true\n  };\n}\nexport default function Path({\n  page,\n  locale\n}) {\n  const router = useRouter();\n  const {\n    theme\n  } = useThemeUI();\n\n  if (router.isFallback) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  } // This includes setting the noindex header because static files always return a status 200 but the rendered not found page page should obviously not be indexed\n\n\n  if (!page && !Builder.isEditing && !Builder.isPreviewing) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"robots\",\n          content: \"noindex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), Builder.isBrowser && /*#__PURE__*/_jsxDEV(DefaultErrorPage, {\n        statusCode: 404\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true);\n  }\n\n  const {\n    title,\n    description,\n    image\n  } = (page === null || page === void 0 ? void 0 : page.data) || {};\n  Builder.isStatic = true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [title && /*#__PURE__*/_jsxDEV(NextSeo, {\n      title: title,\n      description: description,\n      openGraph: _objectSpread({\n        type: 'website',\n        title,\n        description,\n        locale\n      }, image && {\n        images: [{\n          url: image,\n          width: 800,\n          height: 600,\n          alt: title\n        }]\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BuilderComponent, _objectSpread({\n      options: {\n        includeRefs: true\n      },\n      model: \"page\",\n      data: {\n        theme\n      },\n      renderLink: props => {\n        if (props.target === '_blank') {\n          return /*#__PURE__*/_jsxDEV(Themed.a, _objectSpread({}, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Themed.a, _objectSpread(_objectSpread({}, props), {}, {\n          as: Link\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 18\n        }, this);\n      }\n    }, page && {\n      content: page\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\nPath.Layout = Layout;","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/pages/[[...path]].tsx"],"names":["NextSeo","useRouter","Layout","BuilderComponent","Builder","builder","builderConfig","DefaultErrorPage","Head","resolveBuilderContent","init","apiKey","useThemeUI","Link","Themed","getLayoutProps","isProduction","getStaticProps","params","locale","page","urlPath","path","join","props","revalidate","getStaticPaths","locales","pages","getAll","options","noTargeting","paths","map","data","url","fallback","Path","router","theme","isFallback","isEditing","isPreviewing","isBrowser","title","description","image","isStatic","type","images","width","height","alt","includeRefs","target","content"],"mappings":"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","sourcesContent":["import type {\n  GetStaticPathsContext,\n  GetStaticPropsContext,\n  InferGetStaticPropsType,\n} from 'next'\nimport { NextSeo } from 'next-seo'\nimport { useRouter } from 'next/router'\nimport { Layout } from '@components/common'\nimport { BuilderComponent, Builder, builder } from '@builder.io/react'\nimport builderConfig from '@config/builder'\nimport DefaultErrorPage from 'next/error'\nimport Head from 'next/head'\nimport { resolveBuilderContent } from '@lib/resolve-builder-content'\n\nbuilder.init(builderConfig.apiKey)\nimport '../blocks/ProductGrid/ProductGrid.builder'\nimport '../blocks/CollectionView/CollectionView.builder'\nimport { useThemeUI } from '@theme-ui/core'\nimport { Link } from '@components/ui'\nimport { Themed } from '@theme-ui/mdx'\nimport { getLayoutProps } from '@lib/get-layout-props'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\nexport async function getStaticProps({\n  params,\n  locale,\n}: GetStaticPropsContext<{ path: string[] }>) {\n  const page = await resolveBuilderContent('page', {\n    locale,\n    urlPath: '/' + (params?.path?.join('/') || ''),\n  })\n\n  return {\n    props: {\n      page,\n      locale,\n      ...(await getLayoutProps()),\n    },\n    // Next.js will attempt to re-generate the page:\n    // - When a request comes in\n    // - At most once every 30 seconds\n    revalidate: 30,\n  }\n}\n\nexport async function getStaticPaths({ locales }: GetStaticPathsContext) {\n  const pages = await builder.getAll('page', {\n    options: { noTargeting: true },\n    apiKey: builderConfig.apiKey,\n  })\n\n  return {\n    paths: pages.map((page) => `${page.data?.url}`),\n    fallback: true,\n  }\n}\n\nexport default function Path({\n  page,\n  locale,\n}: InferGetStaticPropsType<typeof getStaticProps>) {\n  const router = useRouter()\n  const { theme } = useThemeUI()\n  if (router.isFallback) {\n    return <h1>Loading...</h1>\n  }\n  // This includes setting the noindex header because static files always return a status 200 but the rendered not found page page should obviously not be indexed\n  if (!page && !Builder.isEditing && !Builder.isPreviewing) {\n    return (\n      <>\n        <Head>\n          <meta name=\"robots\" content=\"noindex\" />\n          <meta name=\"title\"></meta>\n        </Head>\n        {Builder.isBrowser && <DefaultErrorPage statusCode={404} />}\n      </>\n    )\n  }\n\n  const { title, description, image } = page?.data! || {}\n  Builder.isStatic = true;\n  return (\n    <div>\n      {title && (\n        <NextSeo\n          title={title}\n          description={description}\n          openGraph={{\n            type: 'website',\n            title,\n            description,\n            locale,\n            ...(image && {\n              images: [\n                {\n                  url: image,\n                  width: 800,\n                  height: 600,\n                  alt: title,\n                },\n              ],\n            }),\n          }}\n        />\n      )}\n      <BuilderComponent\n        options={{ includeRefs: true } as any}\n        model=\"page\"\n        data={{ theme }}\n        renderLink={(props: any) => {\n          if (props.target === '_blank') {\n            return <Themed.a {...props} />\n          }\n          return <Themed.a {...props} as={Link} />\n        }}\n        {...(page && { content: page })}\n      />\n    </div>\n  )\n}\n\nPath.Layout = Layout\n"]},"metadata":{},"sourceType":"module"}