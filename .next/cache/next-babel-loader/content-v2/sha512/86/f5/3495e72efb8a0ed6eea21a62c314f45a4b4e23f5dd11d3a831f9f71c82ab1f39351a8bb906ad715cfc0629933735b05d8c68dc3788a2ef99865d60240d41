{"ast":null,"code":"import dynamic from 'next/dynamic';\nimport { Builder } from '@builder.io/react';\nconst LazyProductGrid = dynamic(async () => {\n  return (await import('./ProductGrid')).ProductGrid;\n}, {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ProductGrid')],\n    modules: ['./ProductGrid']\n  }\n});\nconst isDemo = Boolean(process.env.IS_DEMO);\nconst productCardFields = [{\n  name: 'imgWidth',\n  type: 'number',\n  defaultValue: 540\n}, {\n  name: 'imgHeight',\n  type: 'number',\n  defaultValue: 540\n}, {\n  name: 'imgPriority',\n  type: 'boolean',\n  advanced: true,\n  defaultValue: true\n}, {\n  name: 'imgLoading',\n  type: 'enum',\n  advanced: true,\n  defaultValue: 'lazy',\n  enum: ['eager', 'lazy']\n}, {\n  name: 'imgLayout',\n  type: 'enum',\n  enum: ['fixed', 'intrinsic', 'responsive', 'fill'],\n  advanced: true,\n  defaultValue: 'fill'\n}];\nexport const productGridSchema = [{\n  name: 'cardProps',\n  defaultValue: {\n    imgPriority: true,\n    imgLayout: 'responsive',\n    imgLoading: 'eager',\n    imgWidth: 540,\n    imgHeight: 540,\n    layout: 'fixed'\n  },\n  type: 'object',\n  subFields: productCardFields\n}, {\n  name: 'offset',\n  type: 'number',\n  defaultValue: 0\n}, {\n  name: 'limit',\n  type: 'number',\n  defaultValue: 9\n}];\nBuilder.registerComponent(LazyProductGrid, {\n  name: 'ProductGrid',\n  image: 'https://unpkg.com/css.gg@2.0.0/icons/svg/play-list-add.svg',\n  description: 'Pick products free form',\n  inputs: [{\n    name: 'productsList',\n    type: 'list',\n    subFields: [{\n      name: 'product',\n      type: `${isDemo ? 'ShopifyStore' : 'Shopify'}ProductHandle`\n    }]\n  }].concat(productGridSchema)\n});\nBuilder.registerComponent(LazyProductGrid, {\n  name: 'ProductCollectionGrid',\n  image: 'https://unpkg.com/css.gg@2.0.0/icons/svg/display-grid.svg',\n  description: 'Choose a collection to show its products in a grid',\n  inputs: [{\n    name: 'collection',\n    type: `${isDemo ? 'ShopifyStore' : 'Shopify'}CollectionHandle`\n  }].concat(productGridSchema)\n});","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/blocks/ProductGrid/ProductGrid.builder.ts"],"names":["dynamic","Builder","LazyProductGrid","ProductGrid","isDemo","Boolean","process","env","IS_DEMO","productCardFields","name","type","defaultValue","advanced","enum","productGridSchema","imgPriority","imgLayout","imgLoading","imgWidth","imgHeight","layout","subFields","registerComponent","image","description","inputs","concat"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic'\nimport { Builder } from '@builder.io/react'\nimport { Input } from '@builder.io/sdk'\nconst LazyProductGrid = dynamic(async () => {\n  return (await import('./ProductGrid')).ProductGrid\n})\nconst isDemo = Boolean(process.env.IS_DEMO)\n\nconst productCardFields: Input[] = [\n  {\n    name: 'imgWidth',\n    type: 'number',\n    defaultValue: 540,\n  },\n  {\n    name: 'imgHeight',\n    type: 'number',\n    defaultValue: 540,\n  },\n  {\n    name: 'imgPriority',\n    type: 'boolean',\n    advanced: true,\n    defaultValue: true,\n  },\n  {\n    name: 'imgLoading',\n    type: 'enum',\n    advanced: true,\n    defaultValue: 'lazy',\n    enum: ['eager', 'lazy'],\n  },\n  {\n    name: 'imgLayout',\n    type: 'enum',\n    enum: ['fixed', 'intrinsic', 'responsive', 'fill'],\n    advanced: true,\n    defaultValue: 'fill',\n  },\n]\n\nexport const productGridSchema: Input[] = [\n  {\n    name: 'cardProps',\n    defaultValue: {\n      imgPriority: true,\n      imgLayout: 'responsive',\n      imgLoading: 'eager',\n      imgWidth: 540,\n      imgHeight: 540,\n      layout: 'fixed',\n    },\n    type: 'object',\n    subFields: productCardFields,\n  },\n  {\n    name: 'offset',\n    type: 'number',\n    defaultValue: 0,\n  },\n  {\n    name: 'limit',\n    type: 'number',\n    defaultValue: 9,\n  },\n]\n\nBuilder.registerComponent(LazyProductGrid, {\n  name: 'ProductGrid',\n  image: 'https://unpkg.com/css.gg@2.0.0/icons/svg/play-list-add.svg',\n  description: 'Pick products free form',\n  inputs: [\n    {\n      name: 'productsList',\n      type: 'list',\n      subFields: [\n        {\n          name: 'product',\n          type: `${isDemo ? 'ShopifyStore' : 'Shopify'}ProductHandle`,\n        },\n      ],\n    },\n  ].concat(productGridSchema as any),\n})\n\nBuilder.registerComponent(LazyProductGrid, {\n  name: 'ProductCollectionGrid',\n  image: 'https://unpkg.com/css.gg@2.0.0/icons/svg/display-grid.svg',\n  description: 'Choose a collection to show its products in a grid',\n  inputs: [\n    {\n      name: 'collection',\n      type: `${isDemo ? 'ShopifyStore' : 'Shopify'}CollectionHandle`,\n    },\n  ].concat(productGridSchema),\n})\n"]},"metadata":{},"sourceType":"module"}