{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { Context } from '../Context';\nexport function useAddItemsToCart() {\n  _s();\n\n  var _useContext = useContext(Context),\n      client = _useContext.client,\n      cart = _useContext.cart,\n      setCart = _useContext.setCart;\n\n  function addItemsToCart(_x) {\n    return _addItemsToCart.apply(this, arguments);\n  }\n\n  function _addItemsToCart() {\n    _addItemsToCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(items) {\n      var newCart;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(cart == null || client == null)) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('Called addItemsToCart too soon');\n\n            case 2:\n              if (!(items.length < 1)) {\n                _context.next = 4;\n                break;\n              }\n\n              throw new Error('Must include at least one line item, empty line items found');\n\n            case 4:\n              items.forEach(function (item) {\n                if (item.variantId == null) {\n                  throw new Error(\"Missing variantId in item\");\n                }\n\n                if (item.quantity == null) {\n                  throw new Error(\"Missing quantity in item with variant id: \".concat(item.variantId));\n                } else if (typeof item.quantity != 'number') {\n                  throw new Error(\"Quantity is not a number in item with variant id: \".concat(item.variantId));\n                } else if (item.quantity < 1) {\n                  throw new Error(\"Quantity must not be less than one in item with variant id: \".concat(item.variantId));\n                }\n              });\n              _context.next = 7;\n              return client.checkout.addLineItems(cart.id, // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              items);\n\n            case 7:\n              newCart = _context.sent;\n              setCart(newCart);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addItemsToCart.apply(this, arguments);\n  }\n\n  return addItemsToCart;\n}\n\n_s(useAddItemsToCart, \"sR7w5HM4wL17VSAe28wO5wIhr/Y=\");","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/lib/shopify/storefront-data-hooks/src/hooks/useAddItemsToCart.ts"],"names":["useContext","Context","useAddItemsToCart","client","cart","setCart","addItemsToCart","items","Error","length","forEach","item","variantId","quantity","checkout","addLineItems","id","newCart"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAIA,OAAO,SAASC,iBAAT,GAA6B;AAAA;;AAAA,oBACAF,UAAU,CAACC,OAAD,CADV;AAAA,MAC1BE,MAD0B,eAC1BA,MAD0B;AAAA,MAClBC,IADkB,eAClBA,IADkB;AAAA,MACZC,OADY,eACZA,OADY;;AAAA,WAGnBC,cAHmB;AAAA;AAAA;;AAAA;AAAA,+EAGlC,iBAA8BC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACMH,IAAI,IAAI,IAAR,IAAgBD,MAAM,IAAI,IADhC;AAAA;AAAA;AAAA;;AAAA,oBAEU,IAAIK,KAAJ,CAAU,gCAAV,CAFV;;AAAA;AAAA,oBAKMD,KAAK,CAACE,MAAN,GAAe,CALrB;AAAA;AAAA;AAAA;;AAAA,oBAMU,IAAID,KAAJ,CACJ,6DADI,CANV;;AAAA;AAWED,cAAAA,KAAK,CAACG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,oBAAIA,IAAI,CAACC,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,wBAAM,IAAIJ,KAAJ,6BAAN;AACD;;AAED,oBAAIG,IAAI,CAACE,QAAL,IAAiB,IAArB,EAA2B;AACzB,wBAAM,IAAIL,KAAJ,qDACyCG,IAAI,CAACC,SAD9C,EAAN;AAGD,iBAJD,MAIO,IAAI,OAAOD,IAAI,CAACE,QAAZ,IAAwB,QAA5B,EAAsC;AAC3C,wBAAM,IAAIL,KAAJ,6DACiDG,IAAI,CAACC,SADtD,EAAN;AAGD,iBAJM,MAIA,IAAID,IAAI,CAACE,QAAL,GAAgB,CAApB,EAAuB;AAC5B,wBAAM,IAAIL,KAAJ,uEAC2DG,IAAI,CAACC,SADhE,EAAN;AAGD;AACF,eAlBD;AAXF;AAAA,qBA+BwBT,MAAM,CAACW,QAAP,CAAgBC,YAAhB,CACpBX,IAAI,CAACY,EADe,EAEpB;AACA;AACAT,cAAAA,KAJoB,CA/BxB;;AAAA;AA+BQU,cAAAA,OA/BR;AAqCEZ,cAAAA,OAAO,CAACY,OAAD,CAAP;;AArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHkC;AAAA;AAAA;;AA2ClC,SAAOX,cAAP;AACD;;GA5CeJ,iB","sourcesContent":["import { useContext } from 'react'\nimport { Context } from '../Context'\nimport ShopifyBuy from 'shopify-buy'\nimport { LineItemPatch } from '../types'\n\nexport function useAddItemsToCart() {\n  const { client, cart, setCart } = useContext(Context)\n\n  async function addItemsToCart(items: LineItemPatch[]) {\n    if (cart == null || client == null) {\n      throw new Error('Called addItemsToCart too soon')\n    }\n\n    if (items.length < 1) {\n      throw new Error(\n        'Must include at least one line item, empty line items found'\n      )\n    }\n\n    items.forEach((item) => {\n      if (item.variantId == null) {\n        throw new Error(`Missing variantId in item`)\n      }\n\n      if (item.quantity == null) {\n        throw new Error(\n          `Missing quantity in item with variant id: ${item.variantId}`\n        )\n      } else if (typeof item.quantity != 'number') {\n        throw new Error(\n          `Quantity is not a number in item with variant id: ${item.variantId}`\n        )\n      } else if (item.quantity < 1) {\n        throw new Error(\n          `Quantity must not be less than one in item with variant id: ${item.variantId}`\n        )\n      }\n    })\n\n    const newCart = await client.checkout.addLineItems(\n      cart.id,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      items as ShopifyBuy.LineItem[]\n    )\n    setCart(newCart)\n  }\n\n  return addItemsToCart\n}\n"]},"metadata":{},"sourceType":"module"}