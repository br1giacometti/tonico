{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\tienda\\\\nextjs-shopify-master\\\\components\\\\ui\\\\ImageCarousel.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { jsx, Themed, AspectRatio } from 'theme-ui';\nimport React from 'react';\nimport Image from 'next/image';\nimport dynamic from 'next/dynamic';\nimport UntilInteraction from '@components/common/UntilInteraction';\nconst LazyCarousel = dynamic(() => import('./LazyImageCarousel'), {\n  loading: () => jsx(Themed.div, {\n    sx: {\n      height: '100%',\n      bg: 'muted'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 18\n    }\n  }),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./LazyImageCarousel')],\n    modules: ['./LazyImageCarousel']\n  }\n});\n\nconst ImageCarousel = (_ref) => {\n  let {\n    images,\n    onThumbnailClick,\n    showZoom,\n    currentSlide\n  } = _ref,\n      imageProps = _objectWithoutProperties(_ref, [\"images\", \"onThumbnailClick\", \"showZoom\", \"currentSlide\"]);\n\n  return jsx(AspectRatio, {\n    ratio: Number(imageProps.height) / Number(imageProps.width),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, jsx(UntilInteraction, {\n    skeleton: jsx(Image, _objectSpread(_objectSpread({\n      src: images[0].src\n    }, imageProps), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, jsx(LazyCarousel, _objectSpread(_objectSpread({\n    images: images,\n    showZoom: showZoom,\n    currentSlide: currentSlide,\n    onThumbnailClick: onThumbnailClick\n  }, imageProps), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default ImageCarousel;","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/components/ui/ImageCarousel.tsx"],"names":["jsx","Themed","AspectRatio","React","Image","dynamic","UntilInteraction","LazyCarousel","loading","height","bg","ssr","ImageCarousel","images","onThumbnailClick","showZoom","currentSlide","imageProps","Number","width","src"],"mappings":";;;;;;;;;;;;AAAA;;AACA;AACA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AAIA,MAAMC,YAAY,GAAGF,OAAO,CAAC,MAAM,OAAO,qBAAP,CAAP,EAAsC;AAChEG,EAAAA,OAAO,EAAE,MAAM,IAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,EAAE,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiD;AAEhEC,EAAAA,GAAG,EAAE,KAF2D;AAAA;AAAA,wCAAxB,qBAAwB;AAAA,cAAxB,qBAAwB;AAAA;AAAA,CAAtC,CAA5B;;AAIA,MAAMC,aAA8B,GAAG,UAMjC;AAAA,MANkC;AACtCC,IAAAA,MADsC;AAEtCC,IAAAA,gBAFsC;AAGtCC,IAAAA,QAHsC;AAItCC,IAAAA;AAJsC,GAMlC;AAAA,MADDC,UACC;;AACJ,SACE,IAAC,WAAD;AAAa,IAAA,KAAK,EAAEC,MAAM,CAACD,UAAU,CAACR,MAAZ,CAAN,GAA6BS,MAAM,CAACD,UAAU,CAACE,KAAZ,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,gBAAD;AACE,IAAA,QAAQ,EAAE,IAAC,KAAD;AAAO,MAAA,GAAG,EAAEN,MAAM,CAAC,CAAD,CAAN,CAAUO;AAAtB,OAA+BH,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,IAAC,YAAD;AACE,IAAA,MAAM,EAAEJ,MADV;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,gBAAgB,EAAEF;AAJpB,KAKMG,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CADF,CADF;AAeD,CAtBD;;AAuBA,eAAeL,aAAf","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, Themed, AspectRatio } from 'theme-ui'\nimport React from 'react'\nimport Image from 'next/image'\nimport dynamic from 'next/dynamic'\nimport UntilInteraction from '@components/common/UntilInteraction'\n\ntype props = import('./LazyImageCarousel').ImageCarouselProps\n\nconst LazyCarousel = dynamic(() => import('./LazyImageCarousel'), {\n  loading: () => <Themed.div sx={{ height: '100%', bg: 'muted' }} />,\n  ssr: false,\n})\nconst ImageCarousel: React.FC<props> = ({\n  images,\n  onThumbnailClick,\n  showZoom,\n  currentSlide,\n  ...imageProps\n}) => {\n  return (\n    <AspectRatio ratio={Number(imageProps.height ) / Number(imageProps.width)}>\n      <UntilInteraction\n        skeleton={<Image src={images[0].src} {...imageProps} />}\n      >\n        <LazyCarousel\n          images={images}\n          showZoom={showZoom}\n          currentSlide={currentSlide}\n          onThumbnailClick={onThumbnailClick}\n          {...imageProps}\n        />\n      </UntilInteraction>\n    </AspectRatio>\n  )\n}\nexport default ImageCarousel\n"]},"metadata":{},"sourceType":"module"}