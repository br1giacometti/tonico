{"ast":null,"code":"import { useContext } from 'react';\nimport { Context } from '../Context';\nimport { useGetLineItem } from './useGetLineItem';\nexport function useRemoveItemsFromCart() {\n  const {\n    client,\n    cart,\n    setCart\n  } = useContext(Context);\n  const getLineItem = useGetLineItem();\n\n  async function removeItemsFromCart(variantIds) {\n    if (cart == null || client == null) {\n      throw new Error('Called removeItemsFromCart too soon');\n    }\n\n    if (variantIds.length < 1) {\n      throw new Error('Must include at least one item to remove');\n    }\n\n    const lineItemIds = variantIds.map(variantId => {\n      const lineItem = getLineItem(variantId);\n\n      if (lineItem === null) {\n        throw new Error(`Could not find line item in cart with variant id: ${variantId}`);\n      }\n\n      return String(lineItem.id);\n    });\n    const newCart = await client.checkout.removeLineItems(cart.id, lineItemIds);\n    setCart(newCart);\n  }\n\n  return removeItemsFromCart;\n}","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/lib/shopify/storefront-data-hooks/src/hooks/useRemoveItemsFromCart.ts"],"names":["useContext","Context","useGetLineItem","useRemoveItemsFromCart","client","cart","setCart","getLineItem","removeItemsFromCart","variantIds","Error","length","lineItemIds","map","variantId","lineItem","String","id","newCart","checkout","removeLineItems"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,sBAAT,GAAkC;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA4BN,UAAU,CAACC,OAAD,CAA5C;AACA,QAAMM,WAAW,GAAGL,cAAc,EAAlC;;AAEA,iBAAeM,mBAAf,CAAmCC,UAAnC,EAAyD;AACvD,QAAIJ,IAAI,IAAI,IAAR,IAAgBD,MAAM,IAAI,IAA9B,EAAoC;AAClC,YAAM,IAAIM,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,QAAID,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;AACzB,YAAM,IAAID,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,UAAME,WAAW,GAAGH,UAAU,CAACI,GAAX,CAAgBC,SAAD,IAAe;AAChD,YAAMC,QAAQ,GAAGR,WAAW,CAACO,SAAD,CAA5B;;AACA,UAAIC,QAAQ,KAAK,IAAjB,EAAuB;AACrB,cAAM,IAAIL,KAAJ,CACH,qDAAoDI,SAAU,EAD3D,CAAN;AAGD;;AACD,aAAOE,MAAM,CAACD,QAAQ,CAACE,EAAV,CAAb;AACD,KARmB,CAApB;AAUA,UAAMC,OAAO,GAAG,MAAMd,MAAM,CAACe,QAAP,CAAgBC,eAAhB,CAAgCf,IAAI,CAACY,EAArC,EAAyCL,WAAzC,CAAtB;AACAN,IAAAA,OAAO,CAACY,OAAD,CAAP;AACD;;AAED,SAAOV,mBAAP;AACD","sourcesContent":["import { useContext } from 'react'\nimport { Context } from '../Context'\nimport { useGetLineItem } from './useGetLineItem'\n\nexport function useRemoveItemsFromCart() {\n  const { client, cart, setCart } = useContext(Context)\n  const getLineItem = useGetLineItem()\n\n  async function removeItemsFromCart(variantIds: string[]) {\n    if (cart == null || client == null) {\n      throw new Error('Called removeItemsFromCart too soon')\n    }\n\n    if (variantIds.length < 1) {\n      throw new Error('Must include at least one item to remove')\n    }\n\n    const lineItemIds = variantIds.map((variantId) => {\n      const lineItem = getLineItem(variantId)\n      if (lineItem === null) {\n        throw new Error(\n          `Could not find line item in cart with variant id: ${variantId}`\n        )\n      }\n      return String(lineItem.id)\n    })\n\n    const newCart = await client.checkout.removeLineItems(cart.id, lineItemIds)\n    setCart(newCart)\n  }\n\n  return removeItemsFromCart\n}\n"]},"metadata":{},"sourceType":"module"}