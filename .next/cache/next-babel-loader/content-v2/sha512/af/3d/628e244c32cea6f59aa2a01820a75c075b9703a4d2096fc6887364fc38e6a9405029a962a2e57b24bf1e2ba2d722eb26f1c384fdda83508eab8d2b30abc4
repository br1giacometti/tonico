{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\tienda\\\\nextjs-shopify-master\\\\components\\\\cart\\\\CartItem\\\\CartItem.tsx\";\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport { Themed, jsx, Grid, Input, Text, IconButton } from 'theme-ui';\nimport React, { useEffect, useState } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { Plus, Minus } from '@components/icons';\nimport { getPrice } from '@lib/shopify/storefront-data-hooks/src/utils/product';\nimport { useUpdateItemQuantity, useRemoveItemFromCart } from '@lib/shopify/storefront-data-hooks';\n\nconst CartItem = ({\n  item,\n  currencyCode\n}) => {\n  const updateItem = useUpdateItemQuantity();\n  const removeItem = useRemoveItemFromCart();\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(item.quantity);\n  const {\n    0: removing,\n    1: setRemoving\n  } = useState(false);\n\n  const updateQuantity = async quantity => {\n    await updateItem(item.variant.id, quantity);\n  };\n\n  const handleQuantity = e => {\n    const val = Number(e.target.value);\n\n    if (Number.isInteger(val) && val >= 0) {\n      setQuantity(val);\n    }\n  };\n\n  const handleBlur = () => {\n    const val = Number(quantity);\n\n    if (val !== item.quantity) {\n      updateQuantity(val);\n    }\n  };\n\n  const increaseQuantity = (n = 1) => {\n    const val = Number(quantity) + n;\n\n    if (Number.isInteger(val) && val >= 0) {\n      setQuantity(val);\n      updateQuantity(val);\n    }\n  };\n\n  const handleRemove = async () => {\n    setRemoving(true);\n\n    try {\n      // If this action succeeds then there's no need to do `setRemoving(true)`\n      // because the component will be removed from the view\n      await removeItem(item.variant.id);\n    } catch (error) {\n      console.error(error);\n      setRemoving(false);\n    }\n  };\n\n  useEffect(() => {\n    // Reset the quantity state if the item quantity changes\n    if (item.quantity !== Number(quantity)) {\n      setQuantity(item.quantity);\n    }\n  }, [item.quantity]);\n  return jsx(Grid, {\n    gap: 2,\n    sx: {\n      width: '100%',\n      m: 12\n    },\n    columns: [2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    sx: {\n      padding: 1,\n      border: '1px solid gray',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, jsx(Image, {\n    height: 130,\n    width: 130,\n    unoptimized: true,\n    alt: item.variant.image.altText,\n    src: item.variant.image.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, jsx(Themed.div, {\n    as: Link,\n    href: `/product/${item.variant.product.handle}/`,\n    sx: {\n      fontSize: 3,\n      m: 0,\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, jsx(React.Fragment, null, item.title, jsx(Text, {\n    sx: {\n      fontSize: 4,\n      fontWeight: 700,\n      display: 'block',\n      marginLeft: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, getPrice(item.variant.priceV2.amount, item.variant.priceV2.currencyCode || 'USD')))), jsx(Themed.ul, {\n    sx: {\n      mt: 2,\n      mb: 0,\n      padding: 0,\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, jsx(\"div\", {\n    sx: {\n      display: 'flex',\n      justifyItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, jsx(IconButton, {\n    onClick: () => increaseQuantity(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, jsx(Minus, {\n    width: 18,\n    height: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })), jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, jsx(Input, {\n    sx: {\n      height: '100%',\n      textAlign: 'center'\n    },\n    type: \"number\",\n    max: 99,\n    min: 0,\n    value: quantity,\n    onChange: handleQuantity,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), jsx(IconButton, {\n    onClick: () => increaseQuantity(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, jsx(Plus, {\n    width: 18,\n    height: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })))), item.variant.selectedOptions.map(option => jsx(\"li\", {\n    key: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, option.name, \":\", option.value)))));\n};\n/**\n *         \n\n */\n\n\nexport default CartItem;","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/components/cart/CartItem/CartItem.tsx"],"names":["Themed","jsx","Grid","Input","Text","IconButton","React","useEffect","useState","Image","Link","Plus","Minus","getPrice","useUpdateItemQuantity","useRemoveItemFromCart","CartItem","item","currencyCode","updateItem","removeItem","quantity","setQuantity","removing","setRemoving","updateQuantity","variant","id","handleQuantity","e","val","Number","target","value","isInteger","handleBlur","increaseQuantity","n","handleRemove","error","console","width","m","padding","border","display","justifyContent","alignItems","image","altText","src","product","handle","fontSize","fontWeight","title","marginLeft","priceV2","amount","mt","mb","listStyle","justifyItems","height","textAlign","selectedOptions","map","option","name"],"mappings":"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","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Themed, jsx, Grid, Button, Input, Text, IconButton } from 'theme-ui'\nimport React, { ChangeEvent, useEffect, useState } from 'react'\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport { Plus, Minus } from '@components/icons'\nimport { getPrice } from '@lib/shopify/storefront-data-hooks/src/utils/product'\nimport {\n  useUpdateItemQuantity,\n  useRemoveItemFromCart,\n} from '@lib/shopify/storefront-data-hooks'\n\nconst CartItem = ({\n  item,\n  currencyCode,\n}: {\n  item: /*ShopifyBuy.LineItem todo: check if updated types*/ any\n  currencyCode: string\n}) => {\n  const updateItem = useUpdateItemQuantity()\n  const removeItem = useRemoveItemFromCart()\n  const [quantity, setQuantity] = useState(item.quantity)\n  const [removing, setRemoving] = useState(false)\n  const updateQuantity = async (quantity: number) => {\n    await updateItem(item.variant.id, quantity)\n  }\n  const handleQuantity = (e: ChangeEvent<HTMLInputElement>) => {\n    const val = Number(e.target.value)\n\n    if (Number.isInteger(val) && val >= 0) {\n      setQuantity(val)\n    }\n  }\n  const handleBlur = () => {\n    const val = Number(quantity)\n\n    if (val !== item.quantity) {\n      updateQuantity(val)\n    }\n  }\n  const increaseQuantity = (n = 1) => {\n    const val = Number(quantity) + n\n\n    if (Number.isInteger(val) && val >= 0) {\n      setQuantity(val)\n      updateQuantity(val)\n    }\n  }\n  const handleRemove = async () => {\n    setRemoving(true)\n\n    try {\n      // If this action succeeds then there's no need to do `setRemoving(true)`\n      // because the component will be removed from the view\n      await removeItem(item.variant.id)\n    } catch (error) {\n      console.error(error)\n      setRemoving(false)\n    }\n  }\n\n  useEffect(() => {\n    // Reset the quantity state if the item quantity changes\n    if (item.quantity !== Number(quantity)) {\n      setQuantity(item.quantity)\n    }\n  }, [item.quantity])\n\n  return (\n    <Grid gap={2} sx={{ width: '100%', m: 12 }} columns={[2]}>\n      <div\n        sx={{\n          padding: 1,\n          border: '1px solid gray',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Image\n          height={130}\n          width={130}\n          unoptimized\n          alt={item.variant.image.altText}\n          src={item.variant.image.src}\n        />\n      </div>\n      <div>\n        <Themed.div\n          as={Link}\n          href={`/product/${item.variant.product.handle}/`}\n          sx={{ fontSize: 3, m: 0, fontWeight: 700 }}\n        >\n          <>\n            {item.title}\n            <Text\n              sx={{\n                fontSize: 4,\n                fontWeight: 700,\n                display: 'block',\n                marginLeft: 'auto',\n              }}\n            >\n              {getPrice(\n                item.variant.priceV2.amount,\n                item.variant.priceV2.currencyCode || 'USD'\n              )}\n            </Text>\n          </>\n        </Themed.div>\n        <Themed.ul sx={{ mt: 2, mb: 0, padding: 0, listStyle: 'none' }}>\n          <li>\n            <div sx={{ display: 'flex', justifyItems: 'center' }}>\n              <IconButton onClick={() => increaseQuantity(-1)}>\n                <Minus width={18} height={18} />\n              </IconButton>\n\n              <label>\n                <Input\n                  sx={{\n                    height: '100%',\n                    textAlign: 'center',\n                  }}\n                  type=\"number\"\n                  max={99}\n                  min={0}\n                  value={quantity}\n                  onChange={handleQuantity}\n                  onBlur={handleBlur}\n                />\n              </label>\n              <IconButton onClick={() => increaseQuantity(1)}>\n                <Plus width={18} height={18} />\n              </IconButton>\n            </div>\n          </li>\n          {item.variant.selectedOptions.map((option: any) => (\n            <li key={option.value}>\n              {option.name}:{option.value}\n            </li>\n          ))}\n        </Themed.ul>\n      </div>\n    </Grid>\n  )\n}\n\n/**\n *         \n\n */\n\nexport default CartItem\n"]},"metadata":{},"sourceType":"module"}