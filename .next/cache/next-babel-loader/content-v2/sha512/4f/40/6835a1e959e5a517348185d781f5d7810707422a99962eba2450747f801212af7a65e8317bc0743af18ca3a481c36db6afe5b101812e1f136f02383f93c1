{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\tienda\\\\nextjs-shopify-master\\\\blocks\\\\CollectionView\\\\CollectionView.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\nimport React, { useState, useEffect } from 'react';\nimport { NextSeo } from 'next-seo';\nimport { Themed, jsx } from 'theme-ui';\nimport { LoadingDots } from '@components/ui';\nimport builderConfig from '@config/builder';\nimport { ProductGrid } from '../ProductGrid/ProductGrid';\nimport { getCollection } from '@lib/shopify/storefront-data-hooks/src/api/operations-builder';\n\nconst CollectionPreview = ({\n  collection: initialCollection,\n  productGridOptions,\n  renderSeo\n}) => {\n  const {\n    0: collection,\n    1: setCollection\n  } = useState(initialCollection);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => setCollection(initialCollection), [initialCollection]);\n  useEffect(() => {\n    const fetchCollection = async () => {\n      setLoading(true);\n      const result = await getCollection(builderConfig, {\n        handle: collection\n      });\n      setCollection(result);\n      setLoading(false);\n    };\n\n    if (typeof collection === 'string') {\n      fetchCollection();\n    }\n  }, [collection]);\n\n  if (!collection || typeof collection === 'string' || loading) {\n    return jsx(LoadingDots, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const {\n    title,\n    description,\n    products\n  } = collection;\n  return jsx(Themed.div, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    key: collection.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, renderSeo && jsx(NextSeo, {\n    title: collection.title,\n    description: collection.description,\n    openGraph: {\n      type: 'website',\n      title,\n      description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), jsx(\"div\", {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, jsx(\"span\", {\n    sx: {\n      mt: 0,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, jsx(Themed.h1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, collection.title)), jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: collection.description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), jsx(Themed.div, {\n    sx: {\n      p: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, jsx(ProductGrid, _objectSpread(_objectSpread({}, productGridOptions), {}, {\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default CollectionPreview;","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/blocks/CollectionView/CollectionView.tsx"],"names":["React","useState","useEffect","NextSeo","Themed","jsx","LoadingDots","builderConfig","ProductGrid","getCollection","CollectionPreview","collection","initialCollection","productGridOptions","renderSeo","setCollection","loading","setLoading","fetchCollection","result","handle","title","description","products","display","flexDirection","id","type","mt","mb","__html","p"],"mappings":"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","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport React, { FC, useState, useEffect } from 'react'\nimport { NextSeo } from 'next-seo'\nimport { Themed, jsx } from 'theme-ui'\nimport { LoadingDots } from '@components/ui'\nimport builderConfig from '@config/builder'\nimport { ProductGrid, ProductGridProps } from '../ProductGrid/ProductGrid'\nimport { getCollection } from '@lib/shopify/storefront-data-hooks/src/api/operations-builder'\n\ninterface Props {\n  className?: string\n  children?: any\n  collection: string | any // ShopifyBuy.Collection once their types are up to date\n  productGridOptions: ProductGridProps\n  renderSeo?: boolean\n}\n\nconst CollectionPreview: FC<Props> = ({\n  collection: initialCollection,\n  productGridOptions,\n  renderSeo,\n}) => {\n  const [collection, setCollection] = useState(initialCollection)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => setCollection(initialCollection), [initialCollection])\n\n  useEffect(() => {\n    const fetchCollection = async () => {\n      setLoading(true)\n      const result = await getCollection(builderConfig, {\n        handle: collection,\n      })\n      setCollection(result)\n      setLoading(false)\n    }\n    if (typeof collection === 'string') {\n      fetchCollection()\n    }\n  }, [collection])\n\n  if (!collection || typeof collection === 'string' || loading) {\n    return <LoadingDots />\n  }\n\n  const { title, description, products } = collection\n\n  return (\n    <Themed.div\n      sx={{ display: 'flex', flexDirection: 'column' }}\n      key={collection.id}\n    >\n      {renderSeo && (\n        <NextSeo\n          title={collection.title}\n          description={collection.description}\n          openGraph={{\n            type: 'website',\n            title,\n            description,\n          }}\n        />\n      )}\n      <div sx={{ display: 'flex', flexDirection: 'column' }}>\n        <span sx={{ mt: 0, mb: 2 }}>\n          <Themed.h1>{collection.title}</Themed.h1>\n        </span>\n        <div dangerouslySetInnerHTML={{ __html: collection.description! }} />\n      </div>\n      <Themed.div sx={{ p: 5 }}>\n        <ProductGrid {...productGridOptions} products={products} />\n      </Themed.div>\n    </Themed.div>\n  )\n}\n\nexport default CollectionPreview\n"]},"metadata":{},"sourceType":"module"}