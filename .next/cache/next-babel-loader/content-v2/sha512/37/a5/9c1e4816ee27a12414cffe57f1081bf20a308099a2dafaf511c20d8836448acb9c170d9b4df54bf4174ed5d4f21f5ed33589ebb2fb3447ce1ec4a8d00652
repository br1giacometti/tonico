{"ast":null,"code":"import { useContext } from 'react';\nimport { Context } from '../Context';\nimport { useGetLineItem } from './useGetLineItem';\nexport function useUpdateItemQuantity() {\n  const {\n    client,\n    cart,\n    setCart\n  } = useContext(Context);\n  const getLineItem = useGetLineItem();\n\n  async function updateItemQuantity(variantId, quantity) {\n    if (variantId == null) {\n      throw new Error('Must provide a variant id');\n    }\n\n    if (quantity == null || Number(quantity) < 0) {\n      throw new Error('Quantity must be greater than 0');\n    }\n\n    const lineItem = getLineItem(variantId);\n\n    if (lineItem == null) {\n      throw new Error(`Item with variantId ${variantId} not in cart`);\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n\n    const newCart = await client.checkout.updateLineItems(cart.id, [{\n      id: lineItem.id,\n      quantity\n    }]);\n    setCart(newCart);\n  }\n\n  return updateItemQuantity;\n}","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/tienda/nextjs-shopify-master/lib/shopify/storefront-data-hooks/src/hooks/useUpdateItemQuantity.ts"],"names":["useContext","Context","useGetLineItem","useUpdateItemQuantity","client","cart","setCart","getLineItem","updateItemQuantity","variantId","quantity","Error","Number","lineItem","newCart","checkout","updateLineItems","id"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACtC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA4BN,UAAU,CAACC,OAAD,CAA5C;AACA,QAAMM,WAAW,GAAGL,cAAc,EAAlC;;AAEA,iBAAeM,kBAAf,CACEC,SADF,EAEEC,QAFF,EAGE;AACA,QAAID,SAAS,IAAI,IAAjB,EAAuB;AACrB,YAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAED,QAAID,QAAQ,IAAI,IAAZ,IAAoBE,MAAM,CAACF,QAAD,CAAN,GAAmB,CAA3C,EAA8C;AAC5C,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAED,UAAME,QAAQ,GAAGN,WAAW,CAACE,SAAD,CAA5B;;AACA,QAAII,QAAQ,IAAI,IAAhB,EAAsB;AACpB,YAAM,IAAIF,KAAJ,CAAW,uBAAsBF,SAAU,cAA3C,CAAN;AACD,KAZD,CAcA;AACA;;;AACA,UAAMK,OAAO,GAAG,MAAMV,MAAM,CAACW,QAAP,CAAgBC,eAAhB,CAAgCX,IAAI,CAACY,EAArC,EAAyC,CAC7D;AAAEA,MAAAA,EAAE,EAAEJ,QAAQ,CAACI,EAAf;AAAmBP,MAAAA;AAAnB,KAD6D,CAAzC,CAAtB;AAGAJ,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACD;;AAED,SAAON,kBAAP;AACD","sourcesContent":["import { useContext } from 'react'\nimport { Context } from '../Context'\n\nimport { useGetLineItem } from './useGetLineItem'\n\nexport function useUpdateItemQuantity() {\n  const { client, cart, setCart } = useContext(Context)\n  const getLineItem = useGetLineItem()\n\n  async function updateItemQuantity(\n    variantId: string | number,\n    quantity: number\n  ) {\n    if (variantId == null) {\n      throw new Error('Must provide a variant id')\n    }\n\n    if (quantity == null || Number(quantity) < 0) {\n      throw new Error('Quantity must be greater than 0')\n    }\n\n    const lineItem = getLineItem(variantId)\n    if (lineItem == null) {\n      throw new Error(`Item with variantId ${variantId} not in cart`)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const newCart = await client.checkout.updateLineItems(cart.id, [\n      { id: lineItem.id, quantity },\n    ])\n    setCart(newCart)\n  }\n\n  return updateItemQuantity\n}\n"]},"metadata":{},"sourceType":"module"}