{"version":3,"file":"index.modern.js","sources":["../src/custom-properties.ts","../src/index.tsx"],"sourcesContent":["import { css, get, Theme, __internalGetUseRootStyles } from '@theme-ui/css'\n\nconst toVarName = (key: string) => `--theme-ui-${key.replace('-__default', '')}`\nconst toVarValue = (key: string) => `var(${toVarName(key)})`\n\nconst join = (...args: (string | undefined)[]) => args.filter(Boolean).join('-')\n\nconst numberScales = {\n  fontWeights: true,\n  lineHeights: true,\n}\nconst reservedKeys = {\n  useCustomProperties: true,\n  initialColorModeName: true,\n  printColorModeName: true,\n  initialColorMode: true,\n  useLocalStorage: true,\n}\n\nconst toPixel = (key: string, value: string | number) => {\n  if (typeof value !== 'number') return value\n  if (numberScales[key as keyof typeof numberScales]) return value\n  return value + 'px'\n}\n\n// convert theme values to custom properties\nexport const toCustomProperties = (\n  obj: Record<string, any> | undefined,\n  parent?: string,\n  themeKey?: string\n) => {\n  const next: Record<string, any> = Array.isArray(obj) ? [] : {}\n\n  for (let key in obj) {\n    const value = obj[key]\n    const name = join(parent, key)\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name, key)\n      continue\n    }\n    if (reservedKeys[key as keyof typeof reservedKeys]) {\n      next[key] = value\n      continue\n    }\n    const val = toPixel(themeKey || key, value)\n    next[key] = toVarValue(name)\n  }\n\n  return next\n}\n\nexport const objectToVars = (parent: string, obj: Record<string, any>) => {\n  let vars: Record<string, object> = {}\n  for (let key in obj) {\n    if (key === 'modes') continue\n    const name = join(parent, key)\n    const value = obj[key]\n    if (value && typeof value === 'object') {\n      vars = {\n        ...vars,\n        ...objectToVars(name, value),\n      }\n    } else {\n      vars[toVarName(name)] = value\n    }\n  }\n  return vars\n}\n\n// create root styles for color modes\nexport const createColorStyles = (theme: Theme = {}) => {\n  const rootStyles = __internalGetUseRootStyles(theme)\n  const colors = theme.rawColors || theme.colors\n\n  if (!colors || rootStyles.rootStyles === false) return {}\n  if (theme.useCustomProperties === false) {\n    return css({\n      [rootStyles.scope]: {\n        color: 'text',\n        bg: 'background',\n      },\n    })(theme)\n  }\n  const { initialColorModeName, printColorModeName } = theme\n  const modes = colors.modes || {}\n  const styles = objectToVars('colors', colors)\n\n  Object.keys(modes).forEach((mode) => {\n    const key = `&.theme-ui-${mode}`\n    styles[key] = objectToVars('colors', modes[mode])\n  })\n\n  if (printColorModeName) {\n    const mode =\n      printColorModeName === 'initial' ||\n      printColorModeName === initialColorModeName\n        ? colors\n        : modes[printColorModeName]\n    styles['@media print'] = objectToVars('colors', mode)\n  }\n  const colorToVarValue = (color: string) => toVarValue(`colors-${color}`)\n\n  return css({\n    [rootStyles.scope]: {\n      ...styles,\n      color: colorToVarValue('text'),\n      bg: colorToVarValue('background'),\n    },\n  })(theme)\n}\n","import React, { Dispatch, useEffect, useState, SetStateAction } from 'react'\nimport {\n  jsx,\n  useThemeUI,\n  merge,\n  __ThemeUIInternalBaseThemeProvider,\n} from '@theme-ui/core'\nimport { get, Theme, __internalGetUseRootStyles } from '@theme-ui/css'\nimport { Global } from '@emotion/react'\n\nimport { toCustomProperties, createColorStyles } from './custom-properties'\n\nconst STORAGE_KEY = 'theme-ui-color-mode'\n\ndeclare module '@theme-ui/core' {\n  export interface ThemeUIContextValue {\n    colorMode?: string\n    setColorMode?: (colorMode: SetStateAction<string | undefined>) => void\n  }\n}\n\nconst storage = {\n  get: () => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY)\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n  set: (value: string) => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value)\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n}\n\nconst getPreferredColorScheme = (): 'dark' | 'light' | null => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark'\n    }\n    if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n      return 'light'\n    }\n  }\n  return null\n}\n\nconst getModeFromClass = (): string | undefined => {\n  let mode: string | undefined\n  if (typeof document !== 'undefined') {\n    document.documentElement.classList.forEach((className) => {\n      if (className.startsWith('theme-ui-')) {\n        mode = className.replace('theme-ui-', '')\n      }\n    })\n  }\n  return mode\n}\n\nconst useColorModeState = (theme: Theme = {}) => {\n  let [mode, setMode] = useState(() => {\n    const modeFromClass = getModeFromClass()\n    if (modeFromClass) {\n      return modeFromClass\n    }\n\n    const preferredMode =\n      theme.useColorSchemeMediaQuery !== false && getPreferredColorScheme()\n\n    return preferredMode || theme.initialColorModeName\n  })\n\n  // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n  useEffect(() => {\n    const stored = theme.useLocalStorage !== false && storage.get()\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored)\n      document.body.classList.remove('theme-ui-' + stored)\n    }\n\n    if (stored && stored !== mode) {\n      mode = stored\n      setMode(stored)\n    }\n  }, [])\n\n  // when mode changes, we save it to localStorage\n  React.useEffect(() => {\n    if (mode && theme.useLocalStorage !== false) {\n      storage.set(mode)\n    }\n  }, [mode])\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      theme.colors &&\n      theme.colors.modes &&\n      theme.initialColorModeName &&\n      Object.keys(theme.colors.modes).indexOf(theme.initialColorModeName) > -1\n    ) {\n      console.warn(\n        'The `initialColorModeName` value should be a unique name' +\n          ' and cannot reference a key in `theme.colors.modes`.'\n      )\n    }\n  }\n\n  return [mode, setMode] as const\n}\n\nexport function useColorMode<T extends string = string>(): [\n  T,\n  Dispatch<SetStateAction<T>>\n] {\n  const { colorMode, setColorMode } = useThemeUI()\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`)\n  }\n\n  // We're allowing the user to specify a narrower type for its color mode name.\n  return ([colorMode, setColorMode] as unknown) as [\n    T,\n    Dispatch<SetStateAction<T>>\n  ]\n}\n\nconst applyColorMode = (theme: Theme, mode: string | undefined): Theme => {\n  if (!mode) return { ...theme }\n  const modes = get(theme, 'colors.modes', {})\n  return merge.all({}, theme, {\n    colors: get(modes, mode, {}),\n  })\n}\n\nexport const ColorModeProvider: React.FC = ({ children }) => {\n  const outer = useThemeUI()\n  const [colorMode, setColorMode] = useColorModeState(outer.theme)\n\n  const theme = applyColorMode(outer.theme || {}, colorMode)\n  if (theme.useCustomProperties !== false) {\n    // TODO: This mutation is less than ideal\n    // We could save custom properties to `theme.colorVars`,\n    // But it's infeasible to do this because of how the packages are split.\n    theme.rawColors = theme.colors\n    theme.colors = toCustomProperties(theme.colors, 'colors')\n  }\n\n  const context = {\n    ...outer,\n    theme,\n    colorMode,\n    setColorMode,\n  }\n\n  const isTopLevelColorModeProvider = outer.setColorMode === undefined\n\n  return jsx(\n    __ThemeUIInternalBaseThemeProvider,\n    { context },\n    isTopLevelColorModeProvider\n      ? jsx(Global, {\n          styles: () => {\n            return createColorStyles(theme)\n          },\n        })\n      : jsx('div', {\n          className: 'theme-ui__nested-color-mode-provider',\n          // TODO: This could be refactored a bit.\n          style: createColorStyles(theme)[\n            __internalGetUseRootStyles(theme).scope\n          ],\n        }),\n    children\n  )\n}\n\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n  document.body.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`\n\nexport const InitializeColorMode = () =>\n  jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash,\n    },\n  })\n"],"names":["toVarName","key","replace","toVarValue","join","args","filter","Boolean","reservedKeys","useCustomProperties","initialColorModeName","printColorModeName","initialColorMode","useLocalStorage","toCustomProperties","obj","parent","themeKey","next","Array","isArray","value","name","objectToVars","vars","createColorStyles","theme","rootStyles","__internalGetUseRootStyles","colors","rawColors","css","scope","color","bg","modes","styles","Object","keys","forEach","mode","colorToVarValue","STORAGE_KEY","storage","get","window","localStorage","getItem","e","console","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","getModeFromClass","document","documentElement","classList","className","startsWith","useColorModeState","setMode","useState","modeFromClass","preferredMode","useColorSchemeMediaQuery","useEffect","stored","remove","body","React","process","env","NODE_ENV","indexOf","useColorMode","colorMode","setColorMode","useThemeUI","Error","applyColorMode","merge","all","ColorModeProvider","children","outer","context","isTopLevelColorModeProvider","undefined","jsx","__ThemeUIInternalBaseThemeProvider","Global","style","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"mappings":"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"}