{"version":3,"file":"Masonry-7bd42488.js","sources":["../../src/components/Masonry.tsx"],"sourcesContent":["import {\n  Builder,\n  BuilderAsyncRequestsContext,\n  BuilderBlockComponent,\n  BuilderBlocks,\n  BuilderElement,\n  BuilderStoreContext,\n  stringToFunction,\n} from '@builder.io/react';\nimport * as React from 'react';\nimport Masonry from 'react-masonry-component';\n\ntype BuilderBlockType = BuilderElement;\n\ninterface MasonryProps {\n  tiles: Array<\n    React.ReactNode | { content: BuilderBlockType[] } /* BuilderBlock <- export this type */\n  >;\n  builderBlock: BuilderBlockType;\n  useChildrenForTiles?: boolean;\n  gutterSize?: string;\n  columnWidth?: string;\n}\n\n// TODO: column with, gutter, etc options\nexport class MasonryComponent extends React.Component<MasonryProps> {\n  divRef: HTMLElement | null = null;\n  masonryRef: React.Component<Masonry.MasonryPropTypes> | null = null;\n\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  state = {\n    layoutComplete: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.divRef) {\n        this.divRef.dispatchEvent(\n          new CustomEvent('builder:masonry:load', {\n            bubbles: true,\n            cancelable: false,\n            detail: {\n              block: this.props.builderBlock,\n              ref: this.divRef,\n              masonry: this.masonryRef,\n            },\n          })\n        );\n      }\n\n      if (Builder.isEditing) {\n        // mutation observer?\n      }\n    });\n  }\n\n  render() {\n    let slides = this.props.tiles;\n\n    // if (slides && !Builder.isBrowser) {\n    //   slides = slides.slice(0, 1)\n    // }\n\n    const itemStyle: any = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'stretch',\n      width: this.props.columnWidth,\n    };\n\n    return (\n      <div\n        style={{\n          opacity: Builder.isBrowser && this.state.layoutComplete ? 1 : 0,\n          transition: 'opacity 0.2s',\n        }}\n      >\n        <BuilderAsyncRequestsContext.Consumer>\n          {value => {\n            this._errors = value && value.errors;\n            this._logs = value && value.logs;\n\n            return (\n              <BuilderStoreContext.Consumer>\n                {state => (\n                  <div ref={ref => (this.divRef = ref)} className=\"builder-masonry\">\n                    <Masonry\n                      onLayoutComplete={() => {\n                        if (!this.state.layoutComplete) {\n                          this.setState({\n                            ...this.state,\n                            layoutComplete: true,\n                          });\n                        }\n                      }}\n                      options={{\n                        gutter: this.props.gutterSize,\n                        // Maybe us this\n                        fitWidth:\n                          this.props.columnWidth && this.props.columnWidth.endsWith('%')\n                            ? false\n                            : true,\n                        percentPosition:\n                          // TODO: option to override this too\n                          (this.props.columnWidth &&\n                            (this.props.columnWidth.endsWith('%') ||\n                              this.props.columnWidth.startsWith('.'))) ||\n                          false,\n                      }}\n                      ref={ref => (this.masonryRef = ref)}\n                    >\n                      {/* todo: children.forEach hmm insert block inside */}\n                      {this.props.useChildrenForTiles\n                        ? this.props.builderBlock &&\n                          this.props.builderBlock.children &&\n                          this.props.builderBlock.children.map(\n                            (block: BuilderElement, index: number) => {\n                              if (block.repeat && block.repeat.collection) {\n                                const collectionPath = block.repeat.collection;\n                                const collectionName = (collectionPath || '')\n                                  .split(/\\.\\w+\\(/)[0]\n                                  .trim()\n                                  .split('.')\n                                  .pop();\n                                const itemName =\n                                  block.repeat.itemName ||\n                                  (collectionName ? collectionName + 'Item' : 'item');\n\n                                let array: any[] | void = stringToFunction(\n                                  collectionPath,\n                                  true,\n                                  this._errors,\n                                  this._logs\n                                )(state.state);\n\n                                if (Array.isArray(array)) {\n                                  if (!Builder.isBrowser) {\n                                    array = array.slice(0, 1);\n                                  }\n\n                                  return array.map((data, index) => {\n                                    // TODO: Builder state produce the data\n                                    const childState = {\n                                      ...state.state,\n                                      $index: index,\n                                      $item: data,\n                                      [itemName]: data,\n                                    };\n\n                                    return (\n                                      <div className=\"masonry-item\" style={itemStyle}>\n                                        <BuilderStoreContext.Provider\n                                          key={block.id}\n                                          value={\n                                            {\n                                              ...state,\n                                              state: childState,\n                                            } as any\n                                          }\n                                        >\n                                          <BuilderBlockComponent\n                                            block={{\n                                              ...block,\n                                              repeat: null,\n                                            }}\n                                            index={index}\n                                            child={true} /* TODO: fieldname? */\n                                          />\n                                        </BuilderStoreContext.Provider>\n                                      </div>\n                                    );\n                                  });\n                                }\n                              }\n                              return (\n                                <div style={itemStyle} className=\"masonry-item\">\n                                  <BuilderBlockComponent\n                                    key={block.id}\n                                    block={block}\n                                    index={index}\n                                    child={true} /* TODO: fieldname? */\n                                  />\n                                </div>\n                              );\n                            }\n                          )\n                        : this.props.tiles &&\n                          this.props.tiles.map((tile, index) => (\n                            // TODO: how make react compatible with plain react components\n                            // tiles: <Foo><Bar> <- builder blocks if passed react nodes as blocks just forward them\n                            <div style={itemStyle} className=\"masonry-item\">\n                              <BuilderBlocks\n                                key={index}\n                                parentElementId={\n                                  this.props.builderBlock && this.props.builderBlock.id\n                                }\n                                dataPath={`component.options.tiles.${index}.content`}\n                                child\n                                blocks={(tile as any).content || tile}\n                              />\n                            </div>\n                          ))}\n                    </Masonry>\n                  </div>\n                )}\n              </BuilderStoreContext.Consumer>\n            );\n          }}\n        </BuilderAsyncRequestsContext.Consumer>\n      </div>\n    );\n  }\n}\n"],"names":["React.createElement","React.Component"],"mappings":";;;;;AAwBA;;IACsC,oCAA6B;IAAnE;QAAA,qEA6LC;QA5LC,YAAM,GAAuB,IAAI,CAAC;QAClC,gBAAU,GAAqD,IAAI,CAAC;QAKpE,WAAK,GAAG;YACN,cAAc,EAAE,KAAK;SACtB,CAAC;;KAoLH;IAlLC,4CAAiB,GAAjB;QAAA,iBAoBC;QAnBC,UAAU,CAAC;YACT,IAAI,KAAI,CAAC,MAAM,EAAE;gBACf,KAAI,CAAC,MAAM,CAAC,aAAa,CACvB,IAAI,WAAW,CAAC,sBAAsB,EAAE;oBACtC,OAAO,EAAE,IAAI;oBACb,UAAU,EAAE,KAAK;oBACjB,MAAM,EAAE;wBACN,KAAK,EAAE,KAAI,CAAC,KAAK,CAAC,YAAY;wBAC9B,GAAG,EAAE,KAAI,CAAC,MAAM;wBAChB,OAAO,EAAE,KAAI,CAAC,UAAU;qBACzB;iBACF,CAAC,CACH,CAAC;aACH;YAED,IAAI,OAAO,CAAC,SAAS,EAAE,CAEtB;SACF,CAAC,CAAC;KACJ;IAED,iCAAM,GAAN;QAAA,iBA2JC;QA1JC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;;;QAM9B,IAAM,SAAS,GAAQ;YACrB,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,UAAU,EAAE,SAAS;YACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;SAC9B,CAAC;QAEF,QACEA,uBACE,KAAK,EAAE;gBACL,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC;gBAC/D,UAAU,EAAE,cAAc;aAC3B;YAEDA,cAAC,2BAA2B,CAAC,QAAQ,QAClC,UAAA,KAAK;gBACJ,KAAI,CAAC,OAAO,GAAG,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC;gBACrC,KAAI,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC;gBAEjC,QACEA,cAAC,mBAAmB,CAAC,QAAQ,QAC1B,UAAA,KAAK,IAAI,QACRA,uBAAK,GAAG,EAAE,UAAA,GAAG,IAAI,QAAC,KAAI,CAAC,MAAM,GAAG,GAAG,IAAC,EAAE,SAAS,EAAC,iBAAiB;oBAC/DA,cAAC,OAAO,IACN,gBAAgB,EAAE;4BAChB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gCAC9B,KAAI,CAAC,QAAQ,uBACR,KAAI,CAAC,KAAK,KACb,cAAc,EAAE,IAAI,IACpB,CAAC;6BACJ;yBACF,EACD,OAAO,EAAE;4BACP,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU;;4BAE7B,QAAQ,EACN,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;kCAC1D,KAAK;kCACL,IAAI;4BACV,eAAe;;4BAEb,CAAC,KAAI,CAAC,KAAK,CAAC,WAAW;iCACpB,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;oCACnC,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gCAC3C,KAAK;yBACR,EACD,GAAG,EAAE,UAAA,GAAG,IAAI,QAAC,KAAI,CAAC,UAAU,GAAG,GAAG,IAAC,IAGlC,KAAI,CAAC,KAAK,CAAC,mBAAmB;0BAC3B,KAAI,CAAC,KAAK,CAAC,YAAY;4BACvB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ;4BAChC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAClC,UAAC,KAAqB,EAAE,KAAa;gCACnC,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE;oCAC3C,IAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;oCAC/C,IAAM,cAAc,GAAG,CAAC,cAAc,IAAI,EAAE;yCACzC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;yCACnB,IAAI,EAAE;yCACN,KAAK,CAAC,GAAG,CAAC;yCACV,GAAG,EAAE,CAAC;oCACT,IAAM,UAAQ,GACZ,KAAK,CAAC,MAAM,CAAC,QAAQ;yCACpB,cAAc,GAAG,cAAc,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;oCAEtD,IAAI,KAAK,GAAiB,gBAAgB,CACxC,cAAc,EACd,IAAI,EACJ,KAAI,CAAC,OAAO,EACZ,KAAI,CAAC,KAAK,CACX,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oCAEf,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wCACxB,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;4CACtB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yCAC3B;wCAED,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;;;4CAE3B,IAAM,UAAU,yBACX,KAAK,CAAC,KAAK,WACd,MAAM,EAAE,KAAK,EACb,KAAK,EAAE,IAAI,OACV,UAAQ,IAAG,IAAI,MACjB,CAAC;4CAEF,QACEA,uBAAK,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,SAAS;gDAC5CA,cAAC,mBAAmB,CAAC,QAAQ,IAC3B,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EACH,sBACK,KAAK,KACR,KAAK,EAAE,UAAU,GACX;oDAGVA,cAAC,qBAAqB,IACpB,KAAK,wBACA,KAAK,KACR,MAAM,EAAE,IAAI,KAEd,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,IAAI,GACX,CAC2B,CAC3B,EACN;yCACH,CAAC,CAAC;qCACJ;iCACF;gCACD,QACEA,uBAAK,KAAK,EAAE,SAAS,EAAE,SAAS,EAAC,cAAc;oCAC7CA,cAAC,qBAAqB,IACpB,GAAG,EAAE,KAAK,CAAC,EAAE,EACb,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,IAAI,GACX,CACE,EACN;6BACH,CACF;0BACD,KAAI,CAAC,KAAK,CAAC,KAAK;4BAChB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK;;;4BAGpCA,uBAAK,KAAK,EAAE,SAAS,EAAE,SAAS,EAAC,cAAc;gCAC7CA,cAAC,aAAa,IACZ,GAAG,EAAE,KAAK,EACV,eAAe,EACb,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,EAEvD,QAAQ,EAAE,6BAA2B,KAAK,aAAU,EACpD,KAAK,QACL,MAAM,EAAG,IAAY,CAAC,OAAO,IAAI,IAAI,GACrC,CACE,IACP,CAAC,CACE,CACN,IACP,CAC4B,EAC/B;aACH,CACoC,CACnC,EACN;KACH;IACH,uBAAC;AAAD,CAAC,CA7LqCC,SAAe;;;;"}