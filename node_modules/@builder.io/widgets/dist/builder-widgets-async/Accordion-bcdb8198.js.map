{"version":3,"file":"Accordion-bcdb8198.js","sources":["../../src/components/Accordion.tsx"],"sourcesContent":["import {\n  BuilderAsyncRequestsContext,\n  BuilderBlockComponent,\n  BuilderBlocks,\n  BuilderElement,\n  BuilderStoreContext,\n  stringToFunction,\n} from '@builder.io/react';\nimport * as React from 'react';\n\ninterface AccordionProps {\n  items: {\n    title: BuilderElement[];\n    detail: BuilderElement[];\n  }[];\n\n  oneAtATime?: boolean;\n  grid?: boolean;\n  defaultOpen?: number;\n  animate?: boolean;\n  builderBlock?: BuilderElement;\n  // TODO: gridRowWidth\n  gridRowWidth?: number;\n  useChildrenForItems?: boolean;\n}\n\n// TODO: change to slick grid\nexport class AccordionComponent extends React.Component<AccordionProps> {\n  divRef: HTMLElement | null = null;\n\n  state = {\n    open: [] as number[],\n  };\n\n  private _errors?: Error[];\n  private _logs?: string[];\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.divRef) {\n        this.divRef.dispatchEvent(\n          new CustomEvent('builder:accordion:load', {\n            bubbles: true,\n            cancelable: false,\n            detail: {\n              ref: this,\n            },\n          })\n        );\n      }\n    });\n  }\n\n  getAccordionItem(\n    titleBlocks: BuilderElement[],\n    detailBlocks: BuilderElement[],\n    index: number,\n    openGridItemOrder: number | null,\n    onlyOneAtATime: boolean,\n    fromChildren = false\n  ) {\n    const open = this.state.open.indexOf(index) !== -1;\n    const { grid } = this.props;\n\n    return (\n      // This will not work as expected with react 15\n      // Did preact get the span replacmenet too?\n      <React.Fragment key={index}>\n        <div\n          className={`builder-accordion-title builder-accordion-title-${open ? 'open' : 'closed'}`}\n          style={{\n            cursor: 'pointer',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n            ...(grid && {\n              width: this.props.gridRowWidth,\n              ...(typeof openGridItemOrder === 'number' && {\n                order: index < openGridItemOrder ? index : index + 1,\n              }),\n            }),\n          }}\n          data-index={index}\n          onClick={() => {\n            if (open) {\n              this.setState({\n                ...this.state,\n                open: onlyOneAtATime ? [] : this.state.open.filter(item => item !== index),\n              });\n            } else {\n              this.setState({\n                ...this.state,\n                open: onlyOneAtATime ? [index] : this.state.open.concat(index),\n              });\n            }\n          }}\n        >\n          {fromChildren ? (\n            titleBlocks.map((block, index) => (\n              <BuilderBlockComponent\n                key={index}\n                block={{\n                  ...block,\n                  repeat: null,\n                }}\n                index={index}\n                child={true} /* TODO: fieldname? */\n              />\n            ))\n          ) : (\n            <BuilderBlocks blocks={titleBlocks} dataPath={`items.${index}.title`} />\n          )}\n        </div>\n        {open && (\n          <div\n            className={`builder-accordion-detail builder-accordion-detail-${\n              open ? 'open' : 'closed'\n            }`}\n            style={{\n              order: typeof openGridItemOrder === 'number' ? openGridItemOrder : undefined,\n              maxHeight: this.props.animate ? (open ? '100vh' : 0) : undefined,\n              transition: this.props.animate ? 'max-height 0.5s' : undefined,\n              ...(grid && {\n                width: '100%',\n              }),\n            }}\n          >\n            {open &&\n              (fromChildren ? (\n                detailBlocks.map((block, index) => (\n                  <BuilderBlockComponent\n                    key={index}\n                    block={{\n                      ...block,\n                      repeat: null,\n                    }}\n                    index={index}\n                    child={true} /* TODO: fieldname? */\n                  />\n                ))\n              ) : (\n                <BuilderBlocks blocks={detailBlocks} dataPath={`items.${index}.detail`} />\n              ))}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { grid, oneAtATime } = this.props;\n\n    const onlyOneAtATime = Boolean(grid || oneAtATime);\n\n    const getOpenGridItemPosition = grid && this.state.open.length;\n    let openGridItemOrder: number | null = null;\n    if (getOpenGridItemPosition && this.divRef) {\n      const openItemIndex = this.state.open[0];\n      const openItem = this.divRef.querySelector(\n        `.builder-accordion-title[data-index=\"${openItemIndex}\"]`\n      );\n\n      let subjectItem = openItem;\n      openGridItemOrder = openItemIndex;\n\n      if (subjectItem) {\n        let prevItemRect = subjectItem.getBoundingClientRect();\n\n        while ((subjectItem = subjectItem && subjectItem.nextElementSibling)) {\n          if (subjectItem) {\n            if (subjectItem.classList.contains('builder-accordion-detail')) {\n              continue;\n            }\n            const subjectItemRect = subjectItem.getBoundingClientRect();\n            if (subjectItemRect.left > prevItemRect.left) {\n              const index = parseInt(subjectItem.getAttribute('data-index') || '', 10);\n              if (!isNaN(index)) {\n                prevItemRect = subjectItemRect;\n                openGridItemOrder = index;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    if (typeof openGridItemOrder === 'number') {\n      openGridItemOrder = openGridItemOrder + 1;\n    }\n\n    return (\n      <BuilderAsyncRequestsContext.Consumer>\n        {value => {\n          this._errors = value && value.errors;\n          this._logs = value && value.logs;\n\n          return (\n            <BuilderStoreContext.Consumer>\n              {state => (\n                <div\n                  ref={ref => (this.divRef = ref)}\n                  className=\"builder-accordion\"\n                  style={{\n                    display: 'flex',\n                    alignItems: 'stretch',\n                    flexDirection: 'column',\n                    ...(grid && {\n                      flexDirection: 'row',\n                      alignItems: 'flex-start',\n                      flexWrap: 'wrap',\n                    }),\n                  }}\n                >\n                  {/* TODO: helper static method for builder blocks to do this stuff */}\n                  {this.props.useChildrenForItems\n                    ? this.props.builderBlock &&\n                      this.props.builderBlock.children &&\n                      this.props.builderBlock.children.map(\n                        (block: BuilderElement, index: number) => {\n                          if (block.repeat && block.repeat.collection) {\n                            const collectionPath = block.repeat.collection;\n                            const collectionName = (collectionPath || '')\n                              .split(/\\.\\w+\\(/)[0]\n                              .trim()\n                              .split('.')\n                              .pop();\n\n                            const itemName =\n                              block.repeat.itemName ||\n                              (collectionName ? collectionName + 'Item' : 'item');\n\n                            let array: any[] | void = stringToFunction(\n                              collectionPath,\n                              true,\n                              this._errors,\n                              this._logs\n                            )(state.state);\n                            if (Array.isArray(array)) {\n                              return array.map((data, index) => {\n                                // TODO: Builder state produce the data\n                                const childState = {\n                                  ...state.state,\n                                  $index: index,\n                                  $item: data,\n                                  [itemName]: data,\n                                };\n\n                                return (\n                                  <BuilderStoreContext.Provider\n                                    key={block.id}\n                                    value={{ ...state, state: childState } as any}\n                                  >\n                                    {this.getAccordionItem(\n                                      block.children ? [block.children[0]] : [],\n                                      block.children ? [block.children[1]] : [],\n                                      index,\n                                      openGridItemOrder,\n                                      onlyOneAtATime,\n                                      true\n                                    )}\n                                  </BuilderStoreContext.Provider>\n                                );\n                              });\n                            }\n                          }\n                          return this.getAccordionItem(\n                            block.children ? [block.children[0]] : [],\n                            block.children ? [block.children[1]] : [],\n                            index,\n                            openGridItemOrder,\n                            onlyOneAtATime,\n                            true\n                          );\n                        }\n                      )\n                    : this.props.items &&\n                      this.props.items.map((item, index) => {\n                        return this.getAccordionItem(\n                          item.title,\n                          item.detail,\n                          index,\n                          openGridItemOrder,\n                          onlyOneAtATime\n                        );\n                      })}\n                </div>\n              )}\n            </BuilderStoreContext.Consumer>\n          );\n        }}\n      </BuilderAsyncRequestsContext.Consumer>\n    );\n  }\n}\n"],"names":["React.createElement","React.Fragment","React.Component"],"mappings":"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"}