"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extendAsyncProps = void 0;
const traverse_1 = __importDefault(require("traverse"));
function extendAsyncProps(content, mappers) {
    return __awaiter(this, void 0, void 0, function* () {
        const promises = [];
        traverse_1.default(content).forEach(function (field) {
            const isComponentOptions = this.path.slice(-2).join('.') === 'component.options';
            if (field && isComponentOptions) {
                const keys = Object.keys(field);
                keys.forEach(key => {
                    const mapper = mappers[key];
                    if (mapper) {
                        promises.push(mapper(field).then(result => {
                            this.update(Object.assign(Object.assign({}, field), result));
                        }));
                    }
                });
            }
        });
        yield Promise.all(promises);
        return content;
    });
}
exports.extendAsyncProps = extendAsyncProps;
